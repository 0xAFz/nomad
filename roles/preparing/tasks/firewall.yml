---
- name: Install firewall system
  apt:
    update_cache: true
    name: "{{ nftables if firewall == 'nftables' else iptables-persistent }}"
    state: present

- name: Unload iptables
  community.general.modprobe:
    name: "{{ item }}"
    state: absent
    loop:
      - ip_tables
      - x_tables
  when: firewall == 'nftables'

- name: Unload nftables
  community.general.modprobe:
    name: nf_tables
    state: absent
  when: firewall == 'iptables'

- name: Make iptables configuration file
  template:
    src: iptables.j2
    dest: /etc/iptables/rules.v4
  tags: iptables, firewall
  when: firewall == 'iptables'

- name: Restore iptables state
  shell: iptables-restore < /etc/iptables/rules.v4
  async: 45
  poll: 15
  ignore_errors: true
  notify: Restart iptables
  tags: iptables, firewall
  when: firewall == 'iptables'

- name: Make nftables configuration file
  template:
    src: nftables.conf.j2
    dest: /etc/nftables.conf
  tags: nftables, firewall
  when: firewall == 'nftables'

- name: Restore nftables state
  shell: nft -f /etc/nftables.conf
  async: 45
  poll: 15
  ignore_errors: true
  notify: Restart nftables
  tags: nftables, firewall
  when: firewall == 'nftables'

- name: Enable iptables service
  systemd:
    name: iptables
    enabled: true
    state: started
  ignore_errors: true
  when: firewall == 'iptables'

- name: Disable iptables service
  systemd:
    name: iptables
    enabled: false
    state: stopped
  ignore_errors: true
  when: firewall == 'nftables'

- name: Enable nftables service
  systemd:
    name: nftables
    enabled: true
    state: started
  ignore_errors: true
  when: firewall == 'nftables'

- name: Disable nftables service
  systemd:
    name: nftables
    enabled: false
    state: stopped
  ignore_errors: true
  when: firewall == 'iptables'
